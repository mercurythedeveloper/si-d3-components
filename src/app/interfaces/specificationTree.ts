// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

/**
 * Schema defines model for specifying service location and CFS-RFS tree specification. It
 * is used by modeler SI module that defines relation between services and each specific
 * service model. This schema defines model which will is used for defining specific service
 * location models. This model is used by modeler and model that is resutl of modeler will
 * be used by instance creator and validator.
 */
export interface SiTreeStructure {
    cfsTree:  CfsSpecification[];
    location: Location;
}

/**
 * Defines model for defining Customer Facing Specification - relationshios hierarchy and
 * model
 */
export interface CfsSpecification {
    /**
     * Child Customer Facing Service Specifications
     */
    childCFSs: CfsSpecification[];
    /**
     * Child Resource Facing Service Specifications
     */
    childRFSs: RfsSpecification[];
    /**
     * Service Specification Icon
     */
    icon?: string;
    /**
     * Service Specification Identifier
     */
    id: string;
    /**
     * Maximum Number of Active Service Instance Appearances
     */
    maxSize: number;
    /**
     * Minimum Number of Active Service Instance Appearances
     */
    minSize: number;
    /**
     * Service Specification Name
     */
    name: string;
    /**
     * This attribute defines specific model for each service. Specific model will be defined in
     * external JSON schema and automatically merged with this data
     */
    schemaUri: string;
    /**
     * Service Specification Type
     */
    type?: ServiceSpecificationType;
    /**
     * Once service tree specification is finished and published to production it will receive
     * version number. If there is requirement to change service tree specification,
     * specification must be unlocked. When edited specification will automaticall receive new
     * version number
     */
    version: string;
}

/**
 * Defines model for defining Resource Facing Specification - relationshios hierarchy and
 * model
 */
export interface RfsSpecification {
    /**
     * Child Resource Facing Service Specifications
     */
    childRFSs: RfsSpecification[];
    /**
     * Service Specification Icon
     */
    icon?: string;
    /**
     * Service Specification Identifier
     */
    id: string;
    /**
     * Maximum Number of Active Service Instance Appearances
     */
    maxSize: number;
    /**
     * Minimum Number of Active Service Instance Appearances
     */
    minSize: number;
    /**
     * Service Specification Name
     */
    name: string;
    /**
     * This attribute defines specific model for each service. Specific model will be defined in
     * external JSON schema and automatically merged with this data
     */
    schemaUri: string;
    /**
     * Service Specification Type
     */
    type?: ServiceSpecificationType;
    /**
     * Once service tree specification is finished and published to production it will receive
     * version number. If there is requirement to change service tree specification,
     * specification must be unlocked. When edited specification will automaticall receive new
     * version number
     */
    version: string;
}

/**
 * Service Specification Type
 */
export enum ServiceSpecificationType {
    Cfs = "CFS",
    Rfs = "RFS",
}

export interface Location {
    /**
     * Location Specification Identifier
     */
    id?: string;
    /**
     * Location Specification Name
     */
    name?: string;
    /**
     * Location specification JSON schema that defines model
     */
    schemaUri?: string;
    /**
     * Location Specification Version
     */
    version?: string;
}
